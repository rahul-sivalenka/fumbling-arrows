{"version":3,"sources":["serviceWorker.js","common/constants.js","GoalPost/GoalPost.js","Key/Key.js","Instructor/Instructor.js","Player/Player.js","Settings/Settings.js","Timer/Timer.js","FumblingArrowsGame/FumblingArrowsGame.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","arrowKeyCodes","left","up","right","down","GoalPost","react_default","a","createElement","className","Key","props","concat","direction","Instructor","_ref","currentDirections","directions","37","38","39","40","src_Key_Key","Player","playerEl","React","createRef","moveDistancePerInterval","_useState","useState","_useState2","Object","slicedToArray","keysPressed","setKeysPressed","useEffect","console","log","addEventListener","keydownHandler","keyupHandler","cleanup","newTop","getNewPosition","top","containerHeight","current","clientHeight","newLeft","containerWidth","clientWidth","onPositionChange","style","ref","currentPosition","addKey","subtractKey","maxValue","offset","newPosition","parseInt","which","values","includes","objectSpread","_ref2","removeEventListener","Settings","Timer","FumblingArrayGame","_useState3","_useState4","playerPosition","setPlayerPosition","_useState5","height","width","_useState6","gameDimensions","setGameDimensions","gameWrapperElRef","_gameWrapperElRef$cur","src_Settings_Settings","src_Timer_Timer","src_Instructor_Instructor","src_Player_Player","assign","src_GoalPost_GoalPost","minWindowSize","App","innerHeight","innerWidth","windowSize","setWindowSize","minWindowSizeError","setMinWindowSizeError","windowResizehandler","FumblingArrowsGame_FumblingArrowsGame","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a00dd4e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const arrowKeyCodes = {\r\n  left: 37,\r\n  up: 38,\r\n  right: 39,\r\n  down: 40\r\n};","import React from 'react';\r\nimport './GoalPost.css';\r\n\r\nfunction GoalPost() {\r\n  return (\r\n    <div className=\"GoalPost\">\r\n      GoalPost\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GoalPost;","import React from 'react';\r\nimport './Key.css';\r\n\r\nfunction Key(props) {\r\n  return (\r\n    <div className=\"Key\">\r\n      {/* <div className=\"Key-base\">\r\n        <div className=\"Key-top\">^</div>\r\n      </div> */}\r\n      {/* ^ */}\r\n      <span className={`Key-arrow Key-${props.direction}`}></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Key;","import React from 'react';\r\nimport Key from '../Key/Key';\r\nimport './Instructor.css';\r\n\r\nfunction Instructor({ currentDirections }) {\r\n  const directions = {\r\n    37: 'left',\r\n    38: 'up',\r\n    39: 'right',\r\n    40: 'down'\r\n  };\r\n\r\n  return (\r\n    <div className=\"Instructor\">\r\n      <div className=\"Instructor-row\">\r\n        <Key direction={directions[currentDirections[0]]} />\r\n      </div>\r\n      <div className=\"Instructor-row\">\r\n        <Key direction={directions[currentDirections[1]]} />\r\n        <Key direction={directions[currentDirections[2]]} />\r\n        <Key direction={directions[currentDirections[3]]} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Instructor;","import React, { useEffect, useState } from 'react';\r\nimport './Player.css';\r\nimport { arrowKeyCodes } from '../common/constants';\r\n\r\nfunction Player(props) {\r\n  const playerEl = React.createRef();\r\n\r\n  const moveDistancePerInterval = 3; // in px\r\n\r\n  const [keysPressed, setKeysPressed] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log('Player mounted');\r\n\r\n    wireEvents();\r\n    return cleanup;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Player updated');\r\n\r\n    const newTop = getNewPosition(props.top, arrowKeyCodes.down, arrowKeyCodes.up, props.containerHeight, playerEl.current.clientHeight / 2);\r\n    const newLeft = getNewPosition(props.left, arrowKeyCodes.right, arrowKeyCodes.left, props.containerWidth, playerEl.current.clientWidth / 2);\r\n    props.onPositionChange && props.onPositionChange(newTop, newLeft);\r\n  }, [keysPressed])\r\n\r\n  return (\r\n    <div\r\n      className=\"Player\"\r\n      style={{\r\n        top: props.top,\r\n        left: props.left\r\n      }}\r\n      ref={playerEl}>\r\n\r\n      {/* Player */}\r\n\r\n      {/* <pre className=\"Temp-info\">\r\n        {JSON.stringify(props, null, 2)}\r\n      </pre> */}\r\n\r\n    </div>\r\n  );\r\n\r\n  function getNewPosition(currentPosition, addKey, subtractKey, maxValue, offset) {\r\n    var newPosition = parseInt(currentPosition, 10)\r\n      - (keysPressed[subtractKey] ? moveDistancePerInterval : 0)\r\n      + (keysPressed[addKey] ? moveDistancePerInterval : 0);\r\n    return newPosition - offset < 0 ? 0 + offset : newPosition > maxValue - offset ? maxValue - offset : newPosition;\r\n  }\r\n\r\n  function keydownHandler({ which }) {\r\n    console.log('keydown');\r\n    if (Object.values(arrowKeyCodes).includes(which)) {\r\n      keysPressed[which] = true;\r\n      setKeysPressed({\r\n        ...keysPressed\r\n      });\r\n    }\r\n  }\r\n\r\n  function keyupHandler({ which }) {\r\n    console.log('keyup');\r\n    if (Object.values(arrowKeyCodes).includes(which)) {\r\n      keysPressed[which] = false;\r\n      setKeysPressed({\r\n        ...keysPressed\r\n      });\r\n    }\r\n  }\r\n\r\n  function wireEvents() {\r\n    window.addEventListener('keydown', keydownHandler);\r\n    window.addEventListener('keyup', keyupHandler);\r\n  }\r\n\r\n  function unwireEvents() {\r\n    window.removeEventListener('keydown', keydownHandler);\r\n    window.removeEventListener('keyup', keyupHandler);\r\n  }\r\n\r\n  function cleanup() {\r\n    console.log('Player unmounted');\r\n\r\n    unwireEvents();\r\n  }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport './Settings.css'\r\n\r\nfunction Settings() {\r\n  return (\r\n    <div className=\"Settings\">\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport './Timer.css';\r\n\r\nfunction Timer() {\r\n  return (\r\n    <div className=\"Timer\">\r\n      Timer\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer;","import React, { useEffect, useState } from 'react';\r\nimport { arrowKeyCodes } from '../common/constants';\r\nimport GoalPost from '../GoalPost/GoalPost';\r\nimport Instructor from '../Instructor/Instructor';\r\nimport Player from '../Player/Player';\r\nimport Settings from '../Settings/Settings';\r\nimport Timer from '../Timer/Timer';\r\nimport './FumblingArrowsGame.css';\r\n\r\nfunction FumblingArrayGame() {\r\n  const [currentDirections, setCurrentDirections] = useState([arrowKeyCodes.up, arrowKeyCodes.left, arrowKeyCodes.down, arrowKeyCodes.right]);\r\n\r\n  const [playerPosition, setPlayerPosition] = useState({\r\n    left: 0,\r\n    top: 0\r\n  });\r\n\r\n  const [gameDimensions, setGameDimensions] = useState({\r\n    height: 0,\r\n    width: 0\r\n  });\r\n\r\n  const gameWrapperElRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    console.log('Game mounted');\r\n\r\n    const { clientHeight, clientWidth } = gameWrapperElRef.current;\r\n\r\n    setGameDimensions({\r\n      height: clientHeight,\r\n      width: clientWidth\r\n    });\r\n\r\n    // Set initial position at the center of the game\r\n    setPlayerPosition({\r\n      left: clientWidth / 2,\r\n      top: clientHeight / 2\r\n    });\r\n\r\n    return cleanup;\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log('Game updated');\r\n\r\n  //   const { clientHeight, clientWidth } = gameWrapperElRef.current;\r\n\r\n  //   setGameDimensions({\r\n  //     height: clientHeight,\r\n  //     width: clientWidth\r\n  //   });\r\n\r\n  //   // Reset the position as game dimensions changed\r\n  //   setPlayerPosition({\r\n  //     left: clientWidth / 2,\r\n  //     top: clientHeight / 2\r\n  //   });\r\n  // }, [gameDimensions]);\r\n\r\n  return (\r\n    <div\r\n      className=\"Game\"\r\n      ref={gameWrapperElRef}>\r\n\r\n      <Settings />\r\n\r\n      <Timer />\r\n\r\n      <Instructor currentDirections={currentDirections} />\r\n\r\n      <Player\r\n        {...playerPosition}\r\n        {...{\r\n          containerWidth: gameDimensions.width,\r\n          containerHeight: gameDimensions.height\r\n        }}\r\n        onPositionChange={updatePlayerPosition} />\r\n\r\n      <GoalPost />\r\n\r\n    </div>\r\n  )\r\n\r\n  function updatePlayerPosition(top, left) {\r\n    console.log('Update player position', top, left);\r\n    setPlayerPosition({\r\n      top,\r\n      left\r\n    })\r\n  }\r\n\r\n  function cleanup() {\r\n    console.log('Game unmounted');\r\n  }\r\n}\r\n\r\nexport default FumblingArrayGame;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport FumblingArrayGame from './FumblingArrowsGame/FumblingArrowsGame';\r\n\r\nconst minWindowSize = {\r\n  height: 500,\r\n  width: 500\r\n};\r\n\r\nfunction App() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  });\r\n\r\n  const [minWindowSizeError, setMinWindowSizeError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('App mounted');\r\n\r\n    wireResizeEvent();\r\n\r\n    return cleanup;\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        minWindowSizeError\r\n          ? (\r\n            <div className=\"App-info\">\r\n              {`Minimum window size for this game has to be 800px  x  600px`}\r\n            </div>\r\n          )\r\n          : <FumblingArrayGame />\r\n      }\r\n      <span className=\"App-window-size-info\">\r\n        {`${windowSize.width}px  x  ${windowSize.height}px`}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  function windowResizehandler() {\r\n    console.log('windowResizehandler');\r\n    setWindowSize({\r\n      height: window.innerHeight,\r\n      width: window.innerWidth\r\n    });\r\n\r\n    setMinWindowSizeError(windowSize.height < minWindowSize.height || windowSize.width < minWindowSize.width);\r\n  };\r\n\r\n  function wireResizeEvent() {\r\n    console.log('wireResizeEvent');\r\n    window.addEventListener('resize', windowResizehandler);\r\n  }\r\n\r\n  function unwireResizeEvent() {\r\n    console.log('unwireResizeEvent');\r\n    window.removeEventListener('resize', windowResizehandler);\r\n  }\r\n\r\n  function cleanup() {\r\n    console.log('App unmounted');\r\n    unwireResizeEvent();\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}